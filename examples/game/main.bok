extern "C" fn exit(status: u32) -> void;
extern "C" fn sleep(seconds: u32) -> u32;
extern "C" fn puts(s: *i8) -> i32;
extern "C" fn SDL_Init(flags: u32) -> i32;
extern "C" fn SDL_CreateWindow(title: *i8, x: u32, y: u32, w: u32, h: u32, flags: u32) -> *u8;
extern "C" fn SDL_PollEvent(ev: *u32) -> u32;

struct SDL_Event {
    type: u32;
    // TODO the rest, once we have unions
}

fn main(argc: u32) -> u32 {
    let s: [u8; 3] = "game";
    let p: *u8 = &s;

    if SDL_Init(32) < 0 {
        return 1;
    }
    let window: *u8 = SDL_CreateWindow(p, 0, 0, 400, 400, 4);
    
    let ev: SDL_Event;
    while true {
        SDL_PollEvent(&ev);
        if ev.type == 256 {
            exit(1);
        }
    }

    return 0;
}